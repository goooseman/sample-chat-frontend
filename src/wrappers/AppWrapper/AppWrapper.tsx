import React from "react";
import {
  SettingsContextProvider,
  withSettings,
  WithSettings,
} from "src/contexts/SettingsContext";
import { ChatContextProvider } from "src/contexts/ChatContext";
import StorybookSharedWrapper from "src/wrappers/StorybookSharedWrapper";
import { TargemProvider } from "react-targem";

// translation.json file is autogenerated and ignored
// so we use require() to prevent tsc compile time errors before webpack is first run
// eslint-disable-next-line @typescript-eslint/no-var-requires
const translationsJson = require("src/i18n/translations.json");

interface AppWrapperProps {
  children: React.ReactChild;
}

interface AppWrapperInternalProps extends WithSettings, AppWrapperProps {}

class AppWrapperInternal extends React.PureComponent<AppWrapperInternalProps> {
  render(): React.ReactNode {
    const { lang, username, userId } = this.props;

    return (
      <ChatContextProvider username={username} userId={userId}>
        <TargemProvider
          translations={translationsJson}
          locale={lang}
          detectLocale={false}
        >
          <StorybookSharedWrapper>{this.props.children}</StorybookSharedWrapper>
        </TargemProvider>
      </ChatContextProvider>
    );
  }
}

const AppWrapperInternalWithSettings = withSettings(AppWrapperInternal);

class AppWrapper extends React.PureComponent<AppWrapperProps> {
  render(): React.ReactNode {
    return (
      <SettingsContextProvider>
        <AppWrapperInternalWithSettings>
          {this.props.children}
        </AppWrapperInternalWithSettings>
      </SettingsContextProvider>
    );
  }
}

export default AppWrapper;
